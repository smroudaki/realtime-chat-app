# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/chat-app.web/node_modules
/chat-app.web/.pnp
/chat-app.web/.pnp.js

# testing
/chat-app.web/coverage

# production
/chat-app.web/build

# misc
/chat-app.web/.DS_Store
/chat-app.web/.env.local
/chat-app.web/.env.development.local
/chat-app.web/.env.test.local
/chat-app.web/.env.production.local

/chat-app.web/npm-debug.log*
/chat-app.web/yarn-debug.log*
/chat-app.web/yarn-error.log*

# ---------------------------------------

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
/chat-app.api/*.rsuser
/chat-app.api/*.suo
/chat-app.api/*.user
/chat-app.api/*.userosscache
/chat-app.api/*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
/chat-app.api/*.userprefs

# Mono auto generated files
/chat-app.api/mono_crash.*

# Build results
/chat-app.api/[Dd]ebug/
/chat-app.api/[Dd]ebugPublic/
/chat-app.api/[Rr]elease/
/chat-app.api/[Rr]eleases/
/chat-app.api/x64/
/chat-app.api/x86/
/chat-app.api/[Ww][Ii][Nn]32/
/chat-app.api/[Aa][Rr][Mm]/
/chat-app.api/[Aa][Rr][Mm]64/
/chat-app.api/bld/
/chat-app.api/[Bb]in/
/chat-app.api/[Oo]bj/
/chat-app.api/[Oo]ut/
/chat-app.api/[Ll]og/
/chat-app.api/[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
/chat-app.api/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
/chat-app.api/Generated\ Files/

# MSTest test Results
/chat-app.api/[Tt]est[Rr]esult*/
/chat-app.api/[Bb]uild[Ll]og.*

# NUnit
/chat-app.api/*.VisualState.xml
/chat-app.api/TestResult.xml
/chat-app.api/nunit-*.xml

# Build Results of an ATL Project
/chat-app.api/[Dd]ebugPS/
/chat-app.api/[Rr]eleasePS/
/chat-app.api/dlldata.c

# Benchmark Results
/chat-app.api/BenchmarkDotNet.Artifacts/

# .NET Core
/chat-app.api/project.lock.json
/chat-app.api/project.fragment.lock.json
/chat-app.api/artifacts/

# ASP.NET Scaffolding
/chat-app.api/ScaffoldingReadMe.txt

# StyleCop
/chat-app.api/StyleCopReport.xml

# Files built by Visual Studio
/chat-app.api/*_i.c
/chat-app.api/*_p.c
/chat-app.api/*_h.h
/chat-app.api/*.ilk
/chat-app.api/*.meta
/chat-app.api/*.obj
/chat-app.api/*.iobj
/chat-app.api/*.pch
/chat-app.api/*.pdb
/chat-app.api/*.ipdb
/chat-app.api/*.pgc
/chat-app.api/*.pgd
/chat-app.api/*.rsp
/chat-app.api/*.sbr
/chat-app.api/*.tlb
/chat-app.api/*.tli
/chat-app.api/*.tlh
/chat-app.api/*.tmp
/chat-app.api/*.tmp_proj
/chat-app.api/*_wpftmp.csproj
/chat-app.api/*.log
/chat-app.api/*.vspscc
/chat-app.api/*.vssscc
/chat-app.api/.builds
/chat-app.api/*.pidb
/chat-app.api/*.svclog
/chat-app.api/*.scc

# Chutzpah Test files
/chat-app.api/_Chutzpah*

# Visual C++ cache files
/chat-app.api/ipch/
/chat-app.api/*.aps
/chat-app.api/*.ncb
/chat-app.api/*.opendb
/chat-app.api/*.opensdf
/chat-app.api/*.sdf
/chat-app.api/*.cachefile
/chat-app.api/*.VC.db
/chat-app.api/*.VC.VC.opendb

# Visual Studio profiler
/chat-app.api/*.psess
/chat-app.api/*.vsp
/chat-app.api/*.vspx
/chat-app.api/*.sap

# Visual Studio Trace Files
/chat-app.api/*.e2e

# TFS 2012 Local Workspace
/chat-app.api/$tf/

# Guidance Automation Toolkit
/chat-app.api/*.gpState

# ReSharper is a .NET coding add-in
/chat-app.api/_ReSharper*/
/chat-app.api/*.[Rr]e[Ss]harper
/chat-app.api/*.DotSettings.user

# TeamCity is a build add-in
/chat-app.api/_TeamCity*

# DotCover is a Code Coverage Tool
/chat-app.api/*.dotCover

# AxoCover is a Code Coverage Tool
/chat-app.api/.axoCover/*
/chat-app.api/!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
/chat-app.api/coverage*.json
/chat-app.api/coverage*.xml
/chat-app.api/coverage*.info

# Visual Studio code coverage results
/chat-app.api/*.coverage
/chat-app.api/*.coveragexml

# NCrunch
/chat-app.api/_NCrunch_*
/chat-app.api/.*crunch*.local.xml
/chat-app.api/nCrunchTemp_*

# MightyMoose
/chat-app.api/*.mm.*
/chat-app.api/AutoTest.Net/

# Web workbench (sass)
/chat-app.api/.sass-cache/

# Installshield output folder
/chat-app.api/[Ee]xpress/

# DocProject is a documentation generator add-in
/chat-app.api/DocProject/buildhelp/
/chat-app.api/DocProject/Help/*.HxT
/chat-app.api/DocProject/Help/*.HxC
/chat-app.api/DocProject/Help/*.hhc
/chat-app.api/DocProject/Help/*.hhk
/chat-app.api/DocProject/Help/*.hhp
/chat-app.api/DocProject/Help/Html2
/chat-app.api/DocProject/Help/html

# Click-Once directory
/chat-app.api/publish/

# Publish Web Output
/chat-app.api/*.[Pp]ublish.xml
/chat-app.api/*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
/chat-app.api/*.pubxml
/chat-app.api/*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
/chat-app.api/PublishScripts/

# NuGet Packages
/chat-app.api/*.nupkg
# NuGet Symbol Packages
/chat-app.api/*.snupkg
# The packages folder can be ignored because of Package Restore
/chat-app.api/**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
/chat-app.api/!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
/chat-app.api/*.nuget.props
/chat-app.api/*.nuget.targets

# Microsoft Azure Build Output
/chat-app.api/csx/
/chat-app.api/*.build.csdef

# Microsoft Azure Emulator
/chat-app.api/ecf/
/chat-app.api/rcf/

# Windows Store app package directories and files
/chat-app.api/AppPackages/
/chat-app.api/BundleArtifacts/
/chat-app.api/Package.StoreAssociation.xml
/chat-app.api/_pkginfo.txt
/chat-app.api/*.appx
/chat-app.api/*.appxbundle
/chat-app.api/*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
/chat-app.api/*.[Cc]ache
# but keep track of directories ending in .cache
/chat-app.api/!?*.[Cc]ache/

# Others
/chat-app.api/ClientBin/
/chat-app.api/~$*
/chat-app.api/*~
/chat-app.api/*.dbmdl
/chat-app.api/*.dbproj.schemaview
/chat-app.api/*.jfm
/chat-app.api/*.pfx
/chat-app.api/*.publishsettings
/chat-app.api/orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
/chat-app.api/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
/chat-app.api/_UpgradeReport_Files/
/chat-app.api/Backup*/
/chat-app.api/UpgradeLog*.XML
/chat-app.api/UpgradeLog*.htm
/chat-app.api/ServiceFabricBackup/
/chat-app.api/*.rptproj.bak

# SQL Server files
/chat-app.api/*.mdf
/chat-app.api/*.ldf
/chat-app.api/*.ndf

# Business Intelligence projects
/chat-app.api/*.rdl.data
/chat-app.api/*.bim.layout
/chat-app.api/*.bim_*.settings
/chat-app.api/*.rptproj.rsuser
/chat-app.api/*- [Bb]ackup.rdl
/chat-app.api/*- [Bb]ackup ([0-9]).rdl
/chat-app.api/*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
/chat-app.api/FakesAssemblies/

# GhostDoc plugin setting file
/chat-app.api/*.GhostDoc.xml

# Node.js Tools for Visual Studio
/chat-app.api/.ntvs_analysis.dat
/chat-app.api/node_modules/

# Visual Studio 6 build log
/chat-app.api/*.plg

# Visual Studio 6 workspace options file
/chat-app.api/*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
/chat-app.api/*.vbw

# Visual Studio LightSwitch build output
/chat-app.api/**/*.HTMLClient/GeneratedArtifacts
/chat-app.api/**/*.DesktopClient/GeneratedArtifacts
/chat-app.api/**/*.DesktopClient/ModelManifest.xml
/chat-app.api/**/*.Server/GeneratedArtifacts
/chat-app.api/**/*.Server/ModelManifest.xml
/chat-app.api/_Pvt_Extensions

# Paket dependency manager
/chat-app.api/.paket/paket.exe
/chat-app.api/paket-files/

# FAKE - F# Make
/chat-app.api/.fake/

# CodeRush personal settings
/chat-app.api/.cr/personal

# Python Tools for Visual Studio (PTVS)
/chat-app.api/__pycache__/
/chat-app.api/*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
/chat-app.api/*.tss

# Telerik's JustMock configuration file
/chat-app.api/*.jmconfig

# BizTalk build output
/chat-app.api/*.btp.cs
/chat-app.api/*.btm.cs
/chat-app.api/*.odx.cs
/chat-app.api/*.xsd.cs

# OpenCover UI analysis results
/chat-app.api/OpenCover/

# Azure Stream Analytics local run output
/chat-app.api/ASALocalRun/

# MSBuild Binary and Structured Log
/chat-app.api/*.binlog

# NVidia Nsight GPU debugger configuration file
/chat-app.api/*.nvuser

# MFractors (Xamarin productivity tool) working folder
/chat-app.api/.mfractor/

# Local History for Visual Studio
/chat-app.api/.localhistory/

# BeatPulse healthcheck temp database
/chat-app.api/healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
/chat-app.api/MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
/chat-app.api/.ionide/

# Fody - auto-generated XML schema
/chat-app.api/FodyWeavers.xsd
